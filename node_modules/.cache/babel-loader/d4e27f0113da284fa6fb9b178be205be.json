{"ast":null,"code":"import _toConsumableArray from \"C:\\\\code\\\\react\\\\squadrotationmaker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\code\\\\react\\\\squadrotationmaker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\code\\\\react\\\\squadrotationmaker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\code\\\\react\\\\squadrotationmaker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\code\\\\react\\\\squadrotationmaker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\code\\\\react\\\\squadrotationmaker\\\\src\\\\components\\\\rotationMaker.js\";\nimport React from 'react';\nimport Dropdown from './dropdown';\nimport ColumnNames from './columnNames';\nimport Maps from '../mapData/maps';\nimport RotationItem from './rotationItem';\nimport { Row, Col } from 'antd';\n\nvar RotationMakerApp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RotationMakerApp, _React$Component);\n\n  function RotationMakerApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RotationMakerApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RotationMakerApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      mapsRotation: []\n    };\n\n    _this.handleAddMap = function (index) {\n      var mapRotationArray = _toConsumableArray(_this.state.mapsRotation);\n\n      mapRotationArray.push(Maps[index]); //maprotationlogic\n\n      _this.checkLayersForIssues(mapRotationArray);\n\n      _this.setState({\n        mapsRotation: mapRotationArray\n      });\n    };\n\n    _this.handleMoveLayerUpInArray = function (index) {\n      var mapRotationArray = _toConsumableArray(_this.state.mapsRotation);\n\n      if (index > 0) {\n        var movedArray = _this.moveItemInArrayFromIndexToIndex(mapRotationArray, index, index - 1);\n\n        _this.checkLayersForIssues(movedArray);\n\n        _this.setState({\n          mapsRotation: movedArray\n        });\n      }\n    };\n\n    _this.handleMoveLayerDownInArray = function (index) {\n      var mapRotationArray = _toConsumableArray(_this.state.mapsRotation);\n\n      if (index < mapRotationArray.length - 1) {\n        var movedArray = _this.moveItemInArrayFromIndexToIndex(mapRotationArray, index, index + 1);\n\n        _this.checkLayersForIssues(movedArray);\n\n        _this.setState({\n          mapsRotation: movedArray\n        });\n      }\n    };\n\n    _this.handleRemoveLayerInArray = function (index) {\n      var mapRotationArray = _toConsumableArray(_this.state.mapsRotation);\n\n      mapRotationArray.splice(index, 1);\n\n      _this.checkLayersForIssues(mapRotationArray);\n\n      _this.setState({\n        mapsRotation: mapRotationArray\n      });\n    };\n\n    _this.moveItemInArrayFromIndexToIndex = function (array, fromIndex, toIndex) {\n      if (fromIndex === toIndex) return array;\n\n      var newArray = _toConsumableArray(array);\n\n      var target = newArray[fromIndex];\n      var inc = toIndex < fromIndex ? -1 : 1;\n\n      for (var i = fromIndex; i !== toIndex; i += inc) {\n        newArray[i] = newArray[i + inc];\n      }\n\n      newArray[toIndex] = target;\n      return newArray;\n    };\n\n    _this.checkLayersForIssues = function (layers) {\n      var mapRotationLength = layers.length;\n\n      if (mapRotationLength === 1) {\n        delete layers[0].warningMessage;\n      } else if (mapRotationLength > 1) {\n        layers.map(function (layer, index) {\n          if (index === 0) {\n            if (layer.team1 === layers[mapRotationLength - 1].team2 || layer.team2 === layers[mapRotationLength - 1].team1) {\n              layers[0].warningMessage = \"Same Faction As Last Layer\";\n            } else if (layer.attackersId === 'team1' && layers[mapRotationLength - 1].attackersId === 'team2' || layer.attackersId === 'team2' && layers[mapRotationLength - 1].attackersId === 'team1') {\n              layers[0].warningMessage = \"Same ATK/DEF Side As Last Layer\";\n            } else {\n              delete layers[0].warningMessage;\n            }\n          } else {\n            if (layer.team1 === layers[index - 1].team2 || layer.team2 === layers[index - 1].team1) {\n              layers[index].warningMessage = \"Same Faction As Prev Layer\";\n            } else if (layer.attackersId === 'team1' && layers[index - 1].attackersId === 'team2' || layer.attackersId === 'team2' && layers[index - 1].attackersId === 'team1') {\n              layers[index].warningMessage = \"Same ATK/DEF Side As Prev Layer\";\n            } else {\n              delete layers[index].warningMessage;\n            }\n          }\n        });\n      }\n    };\n\n    _this.render = function () {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Row, {\n        type: \"flex\",\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Squad Rotation Maker\")), React.createElement(Col, {\n        span: 23,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })), React.createElement(Dropdown, {\n        addMap: _this.handleAddMap,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(ColumnNames, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), _this.state.mapsRotation.map(function (map, index) {\n        return React.createElement(RotationItem, {\n          key: map + index,\n          layer: map,\n          index: index,\n          handleMoveUp: _this.handleMoveLayerUpInArray,\n          handleMoveDown: _this.handleMoveLayerDownInArray,\n          handleRemove: _this.handleRemoveLayerInArray,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        });\n      }));\n    };\n\n    return _this;\n  }\n\n  return RotationMakerApp;\n}(React.Component);\n\nexport default RotationMakerApp;","map":{"version":3,"sources":["C:\\code\\react\\squadrotationmaker\\src\\components\\rotationMaker.js"],"names":["React","Dropdown","ColumnNames","Maps","RotationItem","Row","Col","RotationMakerApp","state","mapsRotation","handleAddMap","index","mapRotationArray","push","checkLayersForIssues","setState","handleMoveLayerUpInArray","movedArray","moveItemInArrayFromIndexToIndex","handleMoveLayerDownInArray","length","handleRemoveLayerInArray","splice","array","fromIndex","toIndex","newArray","target","inc","i","layers","mapRotationLength","warningMessage","map","layer","team1","team2","attackersId","render","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Dropdown from './dropdown'\r\nimport ColumnNames from './columnNames'\r\nimport Maps from '../mapData/maps'\r\nimport RotationItem from './rotationItem'\r\nimport { Row, Col } from 'antd';\r\n\r\nclass RotationMakerApp extends React.Component {\r\n    state = { mapsRotation: [] };\r\n\r\n    //handle adding map to rotation\r\n    handleAddMap = (index) => {\r\n\r\n        const mapRotationArray = [...this.state.mapsRotation]\r\n        mapRotationArray.push(Maps[index]);\r\n\r\n        //maprotationlogic\r\n        this.checkLayersForIssues(mapRotationArray);\r\n        this.setState({ mapsRotation: mapRotationArray })\r\n\r\n    }\r\n\r\n    handleMoveLayerUpInArray = (index) => {\r\n        const mapRotationArray = [...this.state.mapsRotation]\r\n\r\n        if (index > 0) {\r\n            let movedArray = this.moveItemInArrayFromIndexToIndex(mapRotationArray, index, index - 1);\r\n            this.checkLayersForIssues(movedArray);\r\n            this.setState({ mapsRotation: movedArray })\r\n        }\r\n    }\r\n\r\n    handleMoveLayerDownInArray = (index) => {\r\n        const mapRotationArray = [...this.state.mapsRotation]\r\n\r\n        if (index < mapRotationArray.length - 1) {\r\n            let movedArray = this.moveItemInArrayFromIndexToIndex(mapRotationArray, index, index + 1);\r\n            this.checkLayersForIssues(movedArray);\r\n            this.setState({ mapsRotation: movedArray })\r\n        }\r\n    }\r\n\r\n    handleRemoveLayerInArray = (index) => {\r\n        const mapRotationArray = [...this.state.mapsRotation]\r\n        mapRotationArray.splice(index, 1);\r\n        this.checkLayersForIssues(mapRotationArray);\r\n        this.setState({ mapsRotation: mapRotationArray })\r\n\r\n    }\r\n\r\n    moveItemInArrayFromIndexToIndex = (array, fromIndex, toIndex) => {\r\n        if (fromIndex === toIndex) return array;\r\n\r\n        const newArray = [...array];\r\n\r\n        const target = newArray[fromIndex];\r\n        const inc = toIndex < fromIndex ? -1 : 1;\r\n\r\n        for (let i = fromIndex; i !== toIndex; i += inc) {\r\n            newArray[i] = newArray[i + inc];\r\n        }\r\n\r\n        newArray[toIndex] = target;\r\n\r\n        return newArray;\r\n    };\r\n\r\n    checkLayersForIssues = (layers) => {\r\n        let mapRotationLength = layers.length;\r\n        if (mapRotationLength === 1) {\r\n            delete layers[0].warningMessage;\r\n        }\r\n\r\n        else if (mapRotationLength > 1) {\r\n            layers.map((layer, index) => {\r\n                if (index === 0) {\r\n                    if (layer.team1 === layers[mapRotationLength - 1].team2 || layer.team2 === layers[mapRotationLength - 1].team1) {\r\n                        layers[0].warningMessage = \"Same Faction As Last Layer\"\r\n                    }\r\n\r\n                    else if ((layer.attackersId === 'team1' && layers[mapRotationLength - 1].attackersId === 'team2') || (layer.attackersId === 'team2' && layers[mapRotationLength - 1].attackersId === 'team1')) {\r\n                        layers[0].warningMessage = \"Same ATK/DEF Side As Last Layer\"\r\n                    }\r\n\r\n                    else {\r\n                        delete layers[0].warningMessage;\r\n                    }\r\n                }\r\n\r\n                else {\r\n                    if (layer.team1 === layers[index - 1].team2 || layer.team2 === layers[index - 1].team1) {\r\n                        layers[index].warningMessage = \"Same Faction As Prev Layer\"\r\n                    }\r\n\r\n                    else if ((layer.attackersId === 'team1' && layers[index - 1].attackersId === 'team2') || (layer.attackersId === 'team2' && layers[index - 1].attackersId === 'team1')) {\r\n                        layers[index].warningMessage = \"Same ATK/DEF Side As Prev Layer\"\r\n                    }\r\n\r\n                    else {\r\n                        delete layers[index].warningMessage\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n\r\n        return (\r\n            <div>\r\n                <Row type=\"flex\" justify=\"center\">\r\n                    <Col span={0}>\r\n                        <h1>Squad Rotation Maker</h1>\r\n                    </Col>\r\n                    <Col span={23}></Col>\r\n                </Row>\r\n                <Dropdown addMap={this.handleAddMap} />\r\n                <ColumnNames />\r\n                {this.state.mapsRotation.map((map, index) => (\r\n                    <RotationItem\r\n                        key={map + index}\r\n                        layer={map}\r\n                        index={index}\r\n                        handleMoveUp={this.handleMoveLayerUpInArray}\r\n                        handleMoveDown={this.handleMoveLayerDownInArray}\r\n                        handleRemove={this.handleRemoveLayerInArray}\r\n                    />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default RotationMakerApp;"]},"metadata":{},"sourceType":"module"}