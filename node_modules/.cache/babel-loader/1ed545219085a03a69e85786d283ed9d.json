{"ast":null,"code":"import _toConsumableArray from \"C:\\\\code\\\\react\\\\squadrotationmaker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\code\\\\react\\\\squadrotationmaker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\code\\\\react\\\\squadrotationmaker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\code\\\\react\\\\squadrotationmaker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\code\\\\react\\\\squadrotationmaker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\code\\\\react\\\\squadrotationmaker\\\\src\\\\components\\\\RotationMaker.js\";\nimport React from 'react';\nimport Dropdown from './Dropdown';\nimport LayerOptions from './LayerOptions';\nimport Maps from '../mapData/maps';\nimport Layers from '../mapData/layers';\nimport { Row, Col } from 'antd';\nimport LayerTable from \"./LayerTable\";\nimport 'antd/dist/antd.css';\n\nvar RotationMakerApp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RotationMakerApp, _React$Component);\n\n  function RotationMakerApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RotationMakerApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RotationMakerApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      mapsRotation: [],\n      layersToChooseFrom: [],\n      optionRowStyle: {\n        marginBottom: 20,\n        height: 200\n      }\n    };\n\n    _this.handleAddMap = function (layerName) {\n      var mapRotationArray = _toConsumableArray(_this.state.mapsRotation); // mapRotationArray.push({...Layers[index]});\n      // let length = mapRotationArray.length;\n      // mapRotationArray[length - 1].key = Date.now();\n      // console.log(mapRotationArray)\n      // //maprotationlogic\n\n\n      _this.checkLayersForIssues(mapRotationArray);\n\n      _this.setState({\n        mapsRotation: mapRotationArray\n      });\n    };\n\n    _this.handleSelectMap = function (index) {\n      var layersToChoose = [];\n      var mapName = Maps[index];\n      Layers.map(function (layer) {\n        if (layer.name.startsWith(mapName)) {\n          switch (layer.team1) {\n            case 'US':\n              layer.team1Image = '/images/US_Flag.png';\n              break;\n\n            case 'GB':\n              layer.team1Image = '/images/GB_flag.jpg';\n              break;\n\n            case 'INS':\n              layer.team1Image = '/images/INS_Flag.png';\n              break;\n\n            case 'MIL':\n              layer.team1Image = '/images/MIL_Flag.png';\n              break;\n\n            case 'RUS':\n              layer.team1Image = '/images/RUS_Flag.png';\n              break;\n          }\n\n          switch (layer.team2) {\n            case 'US':\n              layer.team2Image = '/images/US_Flag.png';\n              break;\n\n            case 'GB':\n              layer.team2Image = '/images/GB_flag.jpg';\n              break;\n\n            case 'INS':\n              layer.team2Image = '/images/INS_Flag.png';\n              break;\n\n            case 'MIL':\n              layer.team2Image = '/images/MIL_Flag.png';\n              break;\n\n            case 'RUS':\n              layer.team2Image = '/images/RUS_Flag.png';\n              break;\n          }\n\n          layersToChoose.push(layer);\n        }\n      });\n\n      _this.setState({\n        layersToChooseFrom: layersToChoose,\n        optionRowStyle: {\n          marginBottom: 20\n        }\n      });\n    };\n\n    _this.handleMoveLayerUpInArray = function (index) {\n      var mapRotationArray = _toConsumableArray(_this.state.mapsRotation);\n\n      if (index > 0) {\n        var movedArray = _this.moveItemInArrayFromIndexToIndex(mapRotationArray, index, index - 1);\n\n        _this.checkLayersForIssues(movedArray);\n\n        _this.setState({\n          mapsRotation: movedArray\n        });\n      }\n    };\n\n    _this.handleMoveLayerDownInArray = function (index) {\n      var mapRotationArray = _toConsumableArray(_this.state.mapsRotation);\n\n      if (index < mapRotationArray.length - 1) {\n        var movedArray = _this.moveItemInArrayFromIndexToIndex(mapRotationArray, index, index + 1);\n\n        _this.checkLayersForIssues(movedArray);\n\n        _this.setState({\n          mapsRotation: movedArray\n        });\n      }\n    };\n\n    _this.handleRemoveLayerInArray = function (index) {\n      var mapRotationArray = _toConsumableArray(_this.state.mapsRotation);\n\n      mapRotationArray.splice(index, 1);\n\n      _this.checkLayersForIssues(mapRotationArray);\n\n      _this.setState({\n        mapsRotation: mapRotationArray\n      });\n    };\n\n    _this.moveItemInArrayFromIndexToIndex = function (array, fromIndex, toIndex) {\n      if (fromIndex === toIndex) return array;\n\n      var newArray = _toConsumableArray(array);\n\n      var target = newArray[fromIndex];\n      var inc = toIndex < fromIndex ? -1 : 1;\n\n      for (var i = fromIndex; i !== toIndex; i += inc) {\n        newArray[i] = newArray[i + inc];\n      }\n\n      newArray[toIndex] = target;\n      return newArray;\n    };\n\n    _this.checkLayersForIssues = function (layers) {\n      var mapRotationLength = layers.length;\n\n      if (mapRotationLength === 1) {\n        delete layers[0].warningMessage;\n      } else if (mapRotationLength > 1) {\n        layers.map(function (layer, index) {\n          if (index === 0) {\n            if (layer.team1 === layers[mapRotationLength - 1].team2 || layer.team2 === layers[mapRotationLength - 1].team1) {\n              layers[0].warningMessage = \"Same Faction As Last Layer\";\n            } else if (layer.attackersId === 'team1' && layers[mapRotationLength - 1].attackersId === 'team2' || layer.attackersId === 'team2' && layers[mapRotationLength - 1].attackersId === 'team1') {\n              layers[0].warningMessage = \"Same ATK/DEF Side As Last Layer\";\n            } else {\n              delete layers[0].warningMessage;\n            }\n          } else {\n            if (layer.team1 === layers[index - 1].team2 || layer.team2 === layers[index - 1].team1) {\n              layers[index].warningMessage = \"Same Faction As Prev Layer\";\n            } else if (layer.attackersId === 'team1' && layers[index - 1].attackersId === 'team2' || layer.attackersId === 'team2' && layers[index - 1].attackersId === 'team1') {\n              layers[index].warningMessage = \"Same ATK/DEF Side As Prev Layer\";\n            } else {\n              delete layers[index].warningMessage;\n            }\n          }\n        });\n      }\n    };\n\n    _this.render = function () {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Row, {\n        type: \"flex\",\n        justify: \"center\",\n        style: {\n          marginBottom: 20,\n          marginTop: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Squad Rotation Maker\"))), React.createElement(Row, {\n        type: \"flex\",\n        justify: \"center\",\n        style: {\n          marginBottom: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        addMap: _this.handleAddMap,\n        changeSelection: _this.handleSelectMap,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        type: \"flex\",\n        justify: \"center\",\n        style: _this.state.optionRowStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(LayerOptions, {\n        layers: _this.state.layersToChooseFrom,\n        addMap: _this.handleAddMap,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        type: \"flex\",\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(LayerTable, {\n        layerRotation: _this.state.mapsRotation,\n        handleMoveUp: _this.handleMoveLayerUpInArray,\n        handleMoveDown: _this.handleMoveLayerDownInArray,\n        handleRemove: _this.handleRemoveLayerInArray,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }))));\n    };\n\n    return _this;\n  }\n\n  return RotationMakerApp;\n}(React.Component);\n\nexport default RotationMakerApp;","map":{"version":3,"sources":["C:\\code\\react\\squadrotationmaker\\src\\components\\RotationMaker.js"],"names":["React","Dropdown","LayerOptions","Maps","Layers","Row","Col","LayerTable","RotationMakerApp","state","mapsRotation","layersToChooseFrom","optionRowStyle","marginBottom","height","handleAddMap","layerName","mapRotationArray","checkLayersForIssues","setState","handleSelectMap","index","layersToChoose","mapName","map","layer","name","startsWith","team1","team1Image","team2","team2Image","push","handleMoveLayerUpInArray","movedArray","moveItemInArrayFromIndexToIndex","handleMoveLayerDownInArray","length","handleRemoveLayerInArray","splice","array","fromIndex","toIndex","newArray","target","inc","i","layers","mapRotationLength","warningMessage","attackersId","render","marginTop","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Dropdown from './Dropdown'\r\nimport LayerOptions from './LayerOptions'\r\nimport Maps from '../mapData/maps'\r\nimport Layers from '../mapData/layers'\r\nimport { Row, Col } from 'antd';\r\nimport LayerTable from \"./LayerTable\";\r\n\r\nimport 'antd/dist/antd.css';\r\n\r\nclass RotationMakerApp extends React.Component {\r\n    state = { mapsRotation: [], layersToChooseFrom: [], optionRowStyle: {marginBottom: 20, height: 200} };\r\n\r\n    //handle adding map to rotation\r\n    handleAddMap = (layerName) => {\r\n        \r\n        let mapRotationArray = [...this.state.mapsRotation];\r\n\r\n\r\n\r\n        // mapRotationArray.push({...Layers[index]});\r\n        // let length = mapRotationArray.length;\r\n        // mapRotationArray[length - 1].key = Date.now();\r\n        // console.log(mapRotationArray)\r\n        // //maprotationlogic\r\n        this.checkLayersForIssues(mapRotationArray);\r\n        this.setState({ mapsRotation: mapRotationArray })\r\n\r\n    }\r\n\r\n    //handles selecting drop down, gets map name, filters through every layer to get layer data of each one\r\n    handleSelectMap = (index) => {\r\n        let layersToChoose = [];\r\n        let mapName = Maps[index];\r\n\r\n        Layers.map(layer => {\r\n            if (layer.name.startsWith(mapName)) {\r\n                switch (layer.team1) {\r\n                    case 'US':\r\n                    layer.team1Image = '/images/US_Flag.png';\r\n                    break;\r\n                    case 'GB':\r\n                    layer.team1Image = '/images/GB_flag.jpg';\r\n                    break;\r\n                    case 'INS':\r\n                    layer.team1Image = '/images/INS_Flag.png';\r\n                    break;\r\n                    case 'MIL':\r\n                    layer.team1Image = '/images/MIL_Flag.png';\r\n                    break;\r\n                    case 'RUS':\r\n                    layer.team1Image = '/images/RUS_Flag.png';\r\n                    break;\r\n                }\r\n                switch (layer.team2) {\r\n                    case 'US':\r\n                    layer.team2Image = '/images/US_Flag.png';\r\n                    break;\r\n                    case 'GB':\r\n                    layer.team2Image = '/images/GB_flag.jpg';\r\n                    break;\r\n                    case 'INS':\r\n                    layer.team2Image = '/images/INS_Flag.png';\r\n                    break;\r\n                    case 'MIL':\r\n                    layer.team2Image = '/images/MIL_Flag.png';\r\n                    break;\r\n                    case 'RUS':\r\n                    layer.team2Image = '/images/RUS_Flag.png';\r\n                    break;\r\n                }\r\n                layersToChoose.push(layer)\r\n            }\r\n        })\r\n\r\n        this.setState({layersToChooseFrom: layersToChoose, optionRowStyle: {marginBottom: 20}} )\r\n    }\r\n\r\n    handleMoveLayerUpInArray = (index) => {\r\n        const mapRotationArray = [...this.state.mapsRotation]\r\n\r\n        if (index > 0) {\r\n            let movedArray = this.moveItemInArrayFromIndexToIndex(mapRotationArray, index, index - 1);\r\n            this.checkLayersForIssues(movedArray);\r\n            this.setState({ mapsRotation: movedArray })\r\n        }\r\n    }\r\n\r\n    handleMoveLayerDownInArray = (index) => {\r\n        const mapRotationArray = [...this.state.mapsRotation]\r\n\r\n        if (index < mapRotationArray.length - 1) {\r\n            let movedArray = this.moveItemInArrayFromIndexToIndex(mapRotationArray, index, index + 1);\r\n            this.checkLayersForIssues(movedArray);\r\n            this.setState({ mapsRotation: movedArray })\r\n        }\r\n    }\r\n\r\n    handleRemoveLayerInArray = (index) => {\r\n        const mapRotationArray = [...this.state.mapsRotation]\r\n        mapRotationArray.splice(index, 1);\r\n        this.checkLayersForIssues(mapRotationArray);\r\n        this.setState({ mapsRotation: mapRotationArray })\r\n\r\n    }\r\n\r\n    moveItemInArrayFromIndexToIndex = (array, fromIndex, toIndex) => {\r\n        if (fromIndex === toIndex) return array;\r\n\r\n        const newArray = [...array];\r\n\r\n        const target = newArray[fromIndex];\r\n        const inc = toIndex < fromIndex ? -1 : 1;\r\n\r\n        for (let i = fromIndex; i !== toIndex; i += inc) {\r\n            newArray[i] = newArray[i + inc];\r\n        }\r\n\r\n        newArray[toIndex] = target;\r\n\r\n        return newArray;\r\n    };\r\n\r\n    checkLayersForIssues = (layers) => {\r\n        let mapRotationLength = layers.length;\r\n        if (mapRotationLength === 1) {\r\n            delete layers[0].warningMessage;\r\n        }\r\n\r\n        else if (mapRotationLength > 1) {\r\n            layers.map((layer, index) => {\r\n                if (index === 0) {\r\n                    if (layer.team1 === layers[mapRotationLength - 1].team2 || layer.team2 === layers[mapRotationLength - 1].team1) {\r\n                        layers[0].warningMessage = \"Same Faction As Last Layer\"\r\n                    }\r\n\r\n                    else if ((layer.attackersId === 'team1' && layers[mapRotationLength - 1].attackersId === 'team2') || (layer.attackersId === 'team2' && layers[mapRotationLength - 1].attackersId === 'team1')) {\r\n                        layers[0].warningMessage = \"Same ATK/DEF Side As Last Layer\"\r\n                    }\r\n\r\n                    else {\r\n                        delete layers[0].warningMessage;\r\n                    }\r\n                }\r\n\r\n                else {\r\n                    if (layer.team1 === layers[index - 1].team2 || layer.team2 === layers[index - 1].team1) {\r\n                        layers[index].warningMessage = \"Same Faction As Prev Layer\"\r\n                    }\r\n\r\n                    else if ((layer.attackersId === 'team1' && layers[index - 1].attackersId === 'team2') || (layer.attackersId === 'team2' && layers[index - 1].attackersId === 'team1')) {\r\n                        layers[index].warningMessage = \"Same ATK/DEF Side As Prev Layer\"\r\n                    }\r\n\r\n                    else {\r\n                        delete layers[index].warningMessage\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n\r\n        return (\r\n            <div>\r\n                <Row type=\"flex\" justify=\"center\" style={{marginBottom: 20, marginTop: 50}}>\r\n                    <Col>\r\n                        <h1>Squad Rotation Maker</h1>\r\n                    </Col>\r\n                </Row>\r\n                <Row type=\"flex\" justify=\"center\" style={{marginBottom: 20}}>\r\n                    <Col>\r\n                        <Dropdown addMap={this.handleAddMap} changeSelection={this.handleSelectMap} />\r\n                    </Col>\r\n                </Row>\r\n                <Row type=\"flex\" justify=\"center\" style={this.state.optionRowStyle}>\r\n                    <Col span={12} >\r\n                        <LayerOptions layers={this.state.layersToChooseFrom} addMap={this.handleAddMap} />\r\n                    </Col>\r\n                </Row>\r\n                <Row type=\"flex\" justify=\"center\">\r\n                    <Col>\r\n                        <LayerTable \r\n                        layerRotation={this.state.mapsRotation}\r\n                        handleMoveUp={this.handleMoveLayerUpInArray}\r\n                        handleMoveDown={this.handleMoveLayerDownInArray}\r\n                        handleRemove={this.handleRemoveLayerInArray}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default RotationMakerApp;"]},"metadata":{},"sourceType":"module"}