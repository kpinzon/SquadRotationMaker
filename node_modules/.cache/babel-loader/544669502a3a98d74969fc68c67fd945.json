{"ast":null,"code":"import _classCallCheck from \"C:\\\\code\\\\react\\\\squadrotationmaker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\code\\\\react\\\\squadrotationmaker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\code\\\\react\\\\squadrotationmaker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\code\\\\react\\\\squadrotationmaker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\code\\\\react\\\\squadrotationmaker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\code\\\\react\\\\squadrotationmaker\\\\src\\\\components\\\\LayerTable.js\";\nimport React from 'react';\nimport { Table } from 'antd';\nimport { Button } from 'antd';\nimport { Tag } from 'antd';\n\nvar LayerTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LayerTable, _React$Component);\n\n  function LayerTable() {\n    _classCallCheck(this, LayerTable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(LayerTable).apply(this, arguments));\n  }\n\n  _createClass(LayerTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      this.columns = [{\n        title: 'Actions',\n        key: 'actions',\n        width: 160,\n        render: function render(text, record, index) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 16\n            },\n            __self: this\n          }, React.createElement(Button, {\n            style: {\n              marginRight: 3\n            },\n            ghost: true,\n            type: \"primary\",\n            icon: \"caret-up\",\n            onClick: function onClick() {\n              return _this.props.handleMoveUp(index);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 17\n            },\n            __self: this\n          }), React.createElement(Button, {\n            style: {\n              marginRight: 3\n            },\n            ghost: true,\n            type: \"primary\",\n            icon: \"caret-down\",\n            onClick: function onClick() {\n              return _this.props.handleMoveDown(index);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 18\n            },\n            __self: this\n          }), React.createElement(Button, {\n            ghost: true,\n            type: \"danger\",\n            icon: \"close\",\n            onClick: function onClick() {\n              return _this.props.handleRemove(index);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19\n            },\n            __self: this\n          }));\n        }\n      }, {\n        title: 'Layer Name',\n        dataIndex: 'name',\n        key: 'name'\n      }, {\n        title: 'Team ID 1',\n        key: 'team1',\n        render: function render(text, record) {\n          return React.createElement(\"img\", {\n            alt: \"team 1\",\n            src: record.team1Image,\n            style: {\n              width: 50,\n              heigth: 25\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          });\n        }\n      }, {\n        title: 'Team ID 2',\n        key: 'team2',\n        render: function render(text, record) {\n          return React.createElement(\"img\", {\n            alt: \"team 2\",\n            src: record.team2Image,\n            style: {\n              width: 50,\n              heigth: 25\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          });\n        }\n      }, {\n        title: 'Attacking Team',\n        key: 'attacking',\n        render: function render(text, record) {\n          if (record.attackersId === 1) {\n            return React.createElement(\"img\", {\n              alt: \"attackers\",\n              src: record.team1Image,\n              style: {\n                width: 50,\n                heigth: 25\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 43\n              },\n              __self: this\n            });\n          } else if (record.attackersId === 2) {\n            return React.createElement(\"img\", {\n              alt: \"attackers\",\n              src: record.team2Image,\n              style: {\n                width: 50,\n                heigth: 25\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 46\n              },\n              __self: this\n            });\n          }\n        }\n      }, {\n        title: 'Warnings',\n        key: 'warningMessage',\n        dataIndex: 'warningMessage',\n        render: function render(text) {\n          if (text) {\n            return React.createElement(Tag, {\n              color: \"red\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 55\n              },\n              __self: this\n            }, text);\n          }\n        }\n      }];\n      return React.createElement(Table, {\n        columns: this.columns,\n        dataSource: this.props.layerRotation,\n        rowKey: function rowKey(record) {\n          return record.key;\n        },\n        pagination: false,\n        style: {\n          width: 900,\n          backgroundColor: \"#FFF0CE\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return LayerTable;\n}(React.Component);\n\n;\nexport default LayerTable;","map":{"version":3,"sources":["C:\\code\\react\\squadrotationmaker\\src\\components\\LayerTable.js"],"names":["React","Table","Button","Tag","LayerTable","columns","title","key","width","render","text","record","index","marginRight","props","handleMoveUp","handleMoveDown","handleRemove","dataIndex","team1Image","heigth","team2Image","attackersId","layerRotation","backgroundColor","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Table } from 'antd';\r\nimport { Button } from 'antd';\r\nimport { Tag } from 'antd';\r\n\r\nclass LayerTable extends React.Component {\r\n\r\n  \r\n  render() {\r\n\r\n    this.columns = [{\r\n      title: 'Actions',\r\n      key: 'actions',\r\n      width: 160,\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <Button style={{ marginRight: 3 }} ghost type=\"primary\" icon=\"caret-up\" onClick={() => this.props.handleMoveUp(index)}></Button>\r\n          <Button style={{ marginRight: 3 }} ghost type=\"primary\" icon=\"caret-down\" onClick={() => this.props.handleMoveDown(index)}></Button>\r\n          <Button ghost type=\"danger\" icon=\"close\" onClick={() => this.props.handleRemove(index)}></Button>\r\n        </span>\r\n      )\r\n    }, {\r\n      title: 'Layer Name',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    }, {\r\n      title: 'Team ID 1',\r\n      key: 'team1',\r\n      render: (text, record) => (\r\n          <img alt=\"team 1\" src={record.team1Image} style={{ width: 50, heigth: 25 }}></img>\r\n      )\r\n    }, {\r\n      title: 'Team ID 2',\r\n      key: 'team2',\r\n      render: (text, record) => (\r\n        <img alt=\"team 2\" src={record.team2Image} style={{ width: 50, heigth: 25 }}></img>\r\n    )\r\n    }, {\r\n      title: 'Attacking Team',\r\n      key: 'attacking',\r\n      render: (text, record) => {\r\n        if (record.attackersId === 1) {\r\n          return <img alt=\"attackers\" src={record.team1Image} style={{ width: 50, heigth: 25 }}></img>\r\n        }\r\n        else if (record.attackersId === 2) {\r\n          return <img alt=\"attackers\" src={record.team2Image} style={{ width: 50, heigth: 25 }}></img>\r\n        }\r\n      }\r\n    }, {\r\n      title: 'Warnings',\r\n      key: 'warningMessage',\r\n      dataIndex: 'warningMessage',\r\n      render: text => {\r\n        if (text) {\r\n          return (<Tag color=\"red\">{text}</Tag>)\r\n        }\r\n      }\r\n    }];\r\n\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        dataSource={this.props.layerRotation}\r\n        rowKey={record => record.key}\r\n        pagination={false}\r\n        style={{ width: 900, backgroundColor: \"#FFF0CE\" }}\r\n      ></Table >\r\n    )\r\n  }\r\n};\r\n\r\nexport default LayerTable; "]},"metadata":{},"sourceType":"module"}