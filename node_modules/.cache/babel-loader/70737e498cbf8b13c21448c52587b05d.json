{"ast":null,"code":"import _classCallCheck from \"C:\\\\code\\\\react\\\\squadrotationmaker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\code\\\\react\\\\squadrotationmaker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\code\\\\react\\\\squadrotationmaker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\code\\\\react\\\\squadrotationmaker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\code\\\\react\\\\squadrotationmaker\\\\src\\\\components\\\\Dropdown.js\";\nimport React from 'react';\nimport Maps from '../mapData/maps';\nimport { Select } from 'antd';\nimport { Button } from 'antd';\nvar Option = Select.Option;\n\nvar Dropdown =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dropdown, _React$Component);\n\n  function Dropdown() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dropdown);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dropdown)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      addButtonDisabled: true,\n      selectedMap: null\n    };\n    _this.mapSelectRef = React.createRef();\n    _this.emptyText = \"Select a Map\";\n\n    _this.handleChange = function (value) {\n      _this.setState({\n        selectedMap: value\n      });\n\n      _this.props.changeSelection(value);\n    };\n\n    _this.handleAdd = function () {\n      _this.props.addMap(_this.state.selectedLayer);\n    };\n\n    _this.render = function () {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(Select, {\n        showSearch: true,\n        onChange: _this.handleChange,\n        ref: _this.mapSelectRef,\n        name: \"selectMap\",\n        style: {\n          width: 300\n        },\n        optionFilterProp: \"children\",\n        placeholder: \"Select a Map\",\n        filterOption: function filterOption(input, option) {\n          return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, Maps.map(function (map, index) {\n        return React.createElement(Option, {\n          key: map,\n          value: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, map);\n      })));\n    };\n\n    return _this;\n  }\n\n  return Dropdown;\n}(React.Component);\n\nexport default Dropdown;","map":{"version":3,"sources":["C:\\code\\react\\squadrotationmaker\\src\\components\\Dropdown.js"],"names":["React","Maps","Select","Button","Option","Dropdown","state","addButtonDisabled","selectedMap","mapSelectRef","createRef","emptyText","handleChange","value","setState","props","changeSelection","handleAdd","addMap","selectedLayer","render","width","input","option","children","toLowerCase","indexOf","map","index","Component"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,IAAMC,MAAM,GAAGF,MAAM,CAACE,MAAtB;;IAEMC,Q;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,iBAAiB,EAAE,IADf;AAEJC,MAAAA,WAAW,EAAE;AAFT,K;UAIRC,Y,GAAeT,KAAK,CAACU,SAAN,E;UACfC,S,GAAY,c;;UAGZC,Y,GAAe,UAACC,KAAD,EAAW;AACtB,YAAKC,QAAL,CAAc;AAAEN,QAAAA,WAAW,EAAEK;AAAf,OAAd;;AACA,YAAKE,KAAL,CAAWC,eAAX,CAA2BH,KAA3B;AACH,K;;UAEDI,S,GAAY,YAAM;AAEd,YAAKF,KAAL,CAAWG,MAAX,CAAkB,MAAKZ,KAAL,CAAWa,aAA7B;AACH,K;;UAEDC,M,GAAS,YAAM;AAEX,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACA,QAAA,UAAU,MADV;AAEA,QAAA,QAAQ,EAAE,MAAKR,YAFf;AAGA,QAAA,GAAG,EAAE,MAAKH,YAHV;AAIA,QAAA,IAAI,EAAC,WAJL;AAKA,QAAA,KAAK,EAAE;AAAEY,UAAAA,KAAK,EAAE;AAAT,SALP;AAMA,QAAA,gBAAgB,EAAC,UANjB;AAOA,QAAA,WAAW,EAAC,cAPZ;AAQA,QAAA,YAAY,EAAE,sBAACC,KAAD,EAAQC,MAAR;AAAA,iBAAmBA,MAAM,CAACR,KAAP,CAAaS,QAAb,CAAsBC,WAAtB,GAAoCC,OAApC,CAA4CJ,KAAK,CAACG,WAAN,EAA5C,KAAoE,CAAvF;AAAA,SARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAYQxB,IAAI,CAAC0B,GAAL,CAAS,UAACA,GAAD,EAAMC,KAAN;AAAA,eACL,oBAAC,MAAD;AAAQ,UAAA,GAAG,EAAED,GAAb;AAAkB,UAAA,KAAK,EAAEC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiCD,GAAjC,CADK;AAAA,OAAT,CAZR,CADJ,CADJ;AAqBH,K;;;;;;EA3CkB3B,KAAK,CAAC6B,S;;AA8C7B,eAAexB,QAAf","sourcesContent":["import React from 'react';\r\nimport Maps from '../mapData/maps'\r\nimport { Select } from 'antd';\r\nimport { Button } from 'antd';\r\nconst Option = Select.Option;\r\n\r\nclass Dropdown extends React.Component {\r\n    \r\n    state = {\r\n        addButtonDisabled: true,\r\n        selectedMap: null\r\n    }\r\n    mapSelectRef = React.createRef();\r\n    emptyText = \"Select a Map\";\r\n    \r\n    \r\n    handleChange = (value) => {\r\n        this.setState({ selectedMap: value});\r\n        this.props.changeSelection(value);\r\n    }\r\n    \r\n    handleAdd = () => {\r\n       \r\n        this.props.addMap(this.state.selectedLayer)\r\n    }\r\n    \r\n    render = () => {\r\n       \r\n        return (\r\n            <div>\r\n                <Select \r\n                showSearch\r\n                onChange={this.handleChange} \r\n                ref={this.mapSelectRef} \r\n                name=\"selectMap\"\r\n                style={{ width: 300 }}\r\n                optionFilterProp=\"children\"\r\n                placeholder=\"Select a Map\"\r\n                filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                >\r\n                   \r\n                    {\r\n                        Maps.map((map, index) => (\r\n                            <Option key={map} value={index}>{map}</Option>\r\n                        ))\r\n                    }\r\n                </Select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}