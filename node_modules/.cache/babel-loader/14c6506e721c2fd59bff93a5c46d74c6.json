{"ast":null,"code":"import _classCallCheck from \"C:\\\\code\\\\react\\\\squadrotationmaker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\code\\\\react\\\\squadrotationmaker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\code\\\\react\\\\squadrotationmaker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\code\\\\react\\\\squadrotationmaker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\code\\\\react\\\\squadrotationmaker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\code\\\\react\\\\squadrotationmaker\\\\src\\\\components\\\\layerTable.js\";\nimport React from 'react';\nimport { Table, Divider, Tag } from 'antd';\nimport { Button } from 'antd';\nimport { DragDropContext, DragSource, DropTarget } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport update from 'immutability-helper';\n\nfunction dragDirection(dragIndex, hoverIndex, initialClientOffset, clientOffset, sourceClientOffset) {\n  var hoverMiddleY = (initialClientOffset.y - sourceClientOffset.y) / 2;\n  var hoverClientY = clientOffset.y - sourceClientOffset.y;\n\n  if (dragIndex < hoverIndex && hoverClientY > hoverMiddleY) {\n    return 'downward';\n  }\n\n  if (dragIndex > hoverIndex && hoverClientY < hoverMiddleY) {\n    return 'upward';\n  }\n}\n\nvar columns = [{\n  title: 'Actions',\n  key: 'actions',\n  render: function render(text, record) {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Add\"), React.createElement(Button, {\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Add\"), React.createElement(Button, {\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Add\"));\n  }\n}, {\n  title: 'Layer Name',\n  dataIndex: 'layer',\n  key: 'layer'\n}, {\n  title: 'Team ID 1',\n  dataIndex: 'team1',\n  key: 'team1'\n}, {\n  title: 'Team ID 2',\n  key: 'team2',\n  dataIndex: 'team2'\n}, {\n  title: 'Attacking Team',\n  key: 'action'\n}, {\n  title: 'Warnings',\n  key: 'warningMessage',\n  dataIndex: 'warningMessage'\n}];\n\nvar LayerTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LayerTable, _React$Component);\n\n  function LayerTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LayerTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LayerTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      rotation: _this.props.layerRotation\n    };\n    return _this;\n  }\n\n  _createClass(LayerTable, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Table, {\n        columns: columns,\n        dataSource: this.props.layerRotation,\n        rowKey: function rowKey(record) {\n          return record.key;\n        },\n        style: {\n          width: 900\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return LayerTable;\n}(React.Component);\n\n;\nexport default LayerTable;","map":{"version":3,"sources":["C:\\code\\react\\squadrotationmaker\\src\\components\\layerTable.js"],"names":["React","Table","Divider","Tag","Button","DragDropContext","DragSource","DropTarget","HTML5Backend","update","dragDirection","dragIndex","hoverIndex","initialClientOffset","clientOffset","sourceClientOffset","hoverMiddleY","y","hoverClientY","columns","title","key","render","text","record","dataIndex","LayerTable","state","rotation","props","layerRotation","width","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,OAAhB,EAAyBC,GAAzB,QAAoC,MAApC;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,eAAT,EAA0BC,UAA1B,EAAsCC,UAAtC,QAAwD,WAAxD;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,SAASC,aAAT,CACEC,SADF,EAEEC,UAFF,EAGEC,mBAHF,EAIEC,YAJF,EAKEC,kBALF,EAME;AACA,MAAMC,YAAY,GAAG,CAACH,mBAAmB,CAACI,CAApB,GAAwBF,kBAAkB,CAACE,CAA5C,IAAiD,CAAtE;AACA,MAAMC,YAAY,GAAGJ,YAAY,CAACG,CAAb,GAAiBF,kBAAkB,CAACE,CAAzD;;AACA,MAAIN,SAAS,GAAGC,UAAZ,IAA0BM,YAAY,GAAGF,YAA7C,EAA2D;AACzD,WAAO,UAAP;AACD;;AACD,MAAIL,SAAS,GAAGC,UAAZ,IAA0BM,YAAY,GAAGF,YAA7C,EAA2D;AACzD,WAAO,QAAP;AACD;AACF;;AAED,IAAMG,OAAO,GAAG,CAAC;AACfC,EAAAA,KAAK,EAAE,SADQ;AAEfC,EAAAA,GAAG,EAAE,SAFU;AAGfC,EAAAA,MAAM,EAAE,gBAACC,IAAD,EAAOC,MAAP;AAAA,WACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,CADM;AAAA;AAHO,CAAD,EAUb;AACDJ,EAAAA,KAAK,EAAE,YADN;AAEDK,EAAAA,SAAS,EAAE,OAFV;AAGDJ,EAAAA,GAAG,EAAE;AAHJ,CAVa,EAcb;AACDD,EAAAA,KAAK,EAAE,WADN;AAEDK,EAAAA,SAAS,EAAE,OAFV;AAGDJ,EAAAA,GAAG,EAAE;AAHJ,CAda,EAkBb;AACDD,EAAAA,KAAK,EAAE,WADN;AAEDC,EAAAA,GAAG,EAAE,OAFJ;AAGDI,EAAAA,SAAS,EAAE;AAHV,CAlBa,EAsBb;AACDL,EAAAA,KAAK,EAAE,gBADN;AAEDC,EAAAA,GAAG,EAAE;AAFJ,CAtBa,EAyBb;AACDD,EAAAA,KAAK,EAAE,UADN;AAEDC,EAAAA,GAAG,EAAE,gBAFJ;AAGDI,EAAAA,SAAS,EAAE;AAHV,CAzBa,CAAhB;;IA+BMC,U;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AAACC,MAAAA,QAAQ,EAAE,MAAKC,KAAL,CAAWC;AAAtB,K;;;;;;6BAGC;AACP,aACA,oBAAC,KAAD;AACE,QAAA,OAAO,EAAEX,OADX;AAEE,QAAA,UAAU,EAAE,KAAKU,KAAL,CAAWC,aAFzB;AAGE,QAAA,MAAM,EAAE,gBAAAN,MAAM;AAAA,iBAAIA,MAAM,CAACH,GAAX;AAAA,SAHhB;AAIE,QAAA,KAAK,EAAE;AAACU,UAAAA,KAAK,EAAE;AAAR,SAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAQD;;;;EAbsB/B,KAAK,CAACgC,S;;AAc9B;AAED,eAAeN,UAAf","sourcesContent":["import React from 'react';\r\nimport { Table, Divider, Tag } from 'antd';\r\nimport { Button } from 'antd';\r\nimport { DragDropContext, DragSource, DropTarget } from 'react-dnd';\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\nimport update from 'immutability-helper';\r\n\r\nfunction dragDirection(\r\n  dragIndex,\r\n  hoverIndex,\r\n  initialClientOffset,\r\n  clientOffset,\r\n  sourceClientOffset,\r\n) {\r\n  const hoverMiddleY = (initialClientOffset.y - sourceClientOffset.y) / 2;\r\n  const hoverClientY = clientOffset.y - sourceClientOffset.y;\r\n  if (dragIndex < hoverIndex && hoverClientY > hoverMiddleY) {\r\n    return 'downward';\r\n  }\r\n  if (dragIndex > hoverIndex && hoverClientY < hoverMiddleY) {\r\n    return 'upward';\r\n  }\r\n}\r\n\r\nconst columns = [{\r\n  title: 'Actions',\r\n  key: 'actions',\r\n  render: (text, record) => (\r\n    <span>\r\n      <Button type=\"primary\" >Add</Button>\r\n      <Button type=\"primary\" >Add</Button>\r\n      <Button type=\"primary\" >Add</Button>\r\n    </span>\r\n  )\r\n}, {\r\n  title: 'Layer Name',\r\n  dataIndex: 'layer',\r\n  key: 'layer',\r\n}, {\r\n  title: 'Team ID 1',\r\n  dataIndex: 'team1',\r\n  key: 'team1',\r\n}, {\r\n  title: 'Team ID 2',\r\n  key: 'team2',\r\n  dataIndex: 'team2',\r\n}, {\r\n  title: 'Attacking Team',\r\n  key: 'action'\r\n}, {\r\n  title: 'Warnings',\r\n  key: 'warningMessage',\r\n  dataIndex: 'warningMessage',\r\n}];\r\n\r\nclass LayerTable extends React.Component {\r\n  state = {rotation: this.props.layerRotation};\r\n  \r\n\r\n  render() {\r\n    return (\r\n    <Table\r\n      columns={columns}\r\n      dataSource={this.props.layerRotation}\r\n      rowKey={record => record.key}\r\n      style={{width: 900}}\r\n    ></Table>\r\n    )\r\n  }\r\n};\r\n\r\nexport default LayerTable; "]},"metadata":{},"sourceType":"module"}